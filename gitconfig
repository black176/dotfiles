[user]
	name = Iury Fukuda
	email = zbioe@protonmail.com
	username = zbioe
[core]
	editor = emacs -nw
	excludesfile = ~/.gitignore
        pager = delta

# require delta installed
[delta]
    line-numbers = true
    side-by-side = true
    syntax-theme = ansi-light

[interactive]
    diffFilter = delta --color-only

[checkout]
    defaultRemote = origin

[color]
    ui = true

[alias]
    co = commit -v
    br = branch -vv -a
    
    # Create a new branch and move into it.
    cb = checkout -b
    ch = checkout
    cm = checkout master
    cs = checkout staging
    cd = checkout development
    
    pm = !(git push -u origin master)
    ps = !(git push -u origin staging)
    pd = !(git push -u origin development)
    
    # Use as:
    # git com message without quotes
    com = "!f() { git commit -m \"$*\"; }; f"
    fe = fetch -v
    gr = grep -Iin
    
    # Complete pull (with submodules)
    pull-sub = !(git pull && git submodule foreach git pull origin master)
    
    # Get commits that are on remote but non on local, and local commits that are not on remote yet.
    incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u})
    outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)
    
    # Logging
    slg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lg = log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=30
    lo = log -p --pretty=fuller --graph --decorate --all --source
    lol = log --graph --oneline --decorate
    sh = shortlog -e
    ls = ls-files -s
    re = reflog show --all
    sf = show --name-only
    
    st = status -sb
    stt = status -v

    # Remove the specified file from the staging area.
    unstage = reset HEAD --
    
    # Reset the specified file to the state it was in the preceding commit.
    undo = checkout --
    
    # Revert the latest commit but keeps the files.
    rollback = reset --soft HEAD~1
    
    # package = !(tar -I 'gzip -9' --exclude=".git/" -cvf ../$(basename "$PWD")_$(date +"%Y-%m-%d_%H-%M-%S").tar.gz *)
    # the ! treats the alias as a shell command.
    # see: https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
    package = !(tar -I 'gzip -9' -cf ../$(basename "$PWD")_$(date +"%Y-%m-%d_%H-%M-%S").tar.gz *)
    
    # Resolve conflict using ours
    resolve-ours = !(grep -lr '<<<<<<<' . | xargs git checkout --ours)

    # Resolve conflict using theirs
    resolve-theirs = !(grep -lr '<<<<<<<' . | xargs git checkout --theirs)
    
    committers = !(git log | grep Author | sort | uniq -c | sort -n -r)
    
    # Last 24 hours commits
    standup = !(git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --since yesterday --author "mrioqueiroz")

[credential]
    helper = cache

[pull]
    rebase = false